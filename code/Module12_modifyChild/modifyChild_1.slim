// set up a simple neutral simulation
initialize() {
	initializeMutationRate(1e-7);
	
	// m1 mutation type: neutral
	initializeMutationType("m1", 0.5, "f", 0.0);
	
	initializeMutationType("m2", 0.5, "f", 0.5);
	m2.convertToSubstitution=F;
	m2.color="red"; 
	
	initializeMutationType("m3", 0.5, "f", 0.5); // mutation B 
	m3.convertToSubstitution = F;
	m3.color = "#20D033";
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m1, 1.0);
	
	// uniform chromosome of length 100 kb with uniform recombination
	initializeGenomicElement(g1, 0, 99999);
	initializeRecombinationRate(1e-8);
}

// create a population of 500 individuals
1 late() {
	sim.addSubpop("p1", 500);
	sample(p1.genomes, 20).addNewDrawnMutation(m2,10000);
	sample(p1.genomes, 20).addNewDrawnMutation(m3,20000);
}

modifyChild(){
hasMutA=sum(child.genomes.countOfMutationsOfType(m2))==2;
hasMutB=sum(child.genomes.countOfMutationsOfType(m3))==2;
if (hasMutA & hasMutB)
return F;
return T;
}


// output samples of 10 genomes periodically, all fixed mutations at end
10000 late() { sim.simulationFinished(); }
